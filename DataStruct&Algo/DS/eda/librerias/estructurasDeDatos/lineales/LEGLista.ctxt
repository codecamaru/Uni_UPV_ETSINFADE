#BlueJ class context
comment0.params=
comment0.target=LEGLista()
comment0.text=construye\ una\ Lista\ vacia,\ de\ talla\ cero\ *
comment1.params=e\ i
comment1.target=void\ insertar(java.lang.Object,\ int)
comment1.text=\ SII\ 0<\=i<\=talla()\:\ \r\n\ inserta\ el\ elemento\ e\ en\ la\ posicion\ i\ de\ una\ Lista\ \r\n
comment2.params=i
comment2.target=void\ eliminar(int)
comment2.text=\ SII\ talla()>0\ AND\ 0<\=i<talla()\:\ \r\n\ elimina\ el\ elemento\ que\ ocupa\ la\ posicion\ i\ de\ una\ Lista\ \r\n
comment3.params=i
comment3.target=java.lang.Object\ recuperar(int)
comment3.text=\ SII\ talla()>0\ AND\ 0<\=i<talla()\:\ \r\n\ devuelve\ el\ elemento\ que\ ocupa\ la\ i-esima\ posicion\ de\ una\ Lista\ \r\n
comment4.params=
comment4.target=boolean\ esVacia()
comment4.text=comprueba\ si\ una\ Lista\ esta\ vacia\ *
comment5.params=
comment5.target=int\ talla()
comment5.text=devuelve\ la\ talla\ de\ una\ Lista\ *
comment6.params=
comment6.target=java.lang.String\ toString()
comment6.text=\ devuelve\ el\ String\ con\ los\ elementos\ de\ una\ Lista\ en\ orden\ de\ insercion\r\n\ \ y\ con\ el\ formato\ que\ se\ usa\ en\ el\ estandar\ de\ Java\r\n\ \ Asi,\ por\ ejemplo,\ si\ se\ tiene\ una\ Lista\ con\ los\ Integer\ del\ 1\ al\ 4,\ en\ \r\n\ \ orden\ de\ inserci\u00F3n,\ toString\ devuelve\ [1,\ 2,\ 3,\ 4];\ \r\n\ \ si\ la\ Lista\ esta\ vacia,\ entonces\ devuelve\ []\ \r\n
numComments=7
